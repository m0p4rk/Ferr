<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warr.ferr.mapper.UserMapper">

	<resultMap id="userResultMap"
		type="com.warr.ferr.model.Users">
		<id property="userId" column="user_id" />
		<result property="kakaoId" column="kakao_id" />
		<result property="email" column="email" />
		<result property="password" column="password" />
		<result property="nickname" column="nickname" />
		<result property="profileImageUrl" column="profile_image_url" />
		<result property="role" column="role" />
		<result property="realName" column="real_name" />
		<result property="accountStatus" column="account_status" />
		<result property="createdAt" column="created_at" />
	</resultMap>

	<select id="findByNickname"
		resultMap="userResultMap">
		SELECT * FROM users WHERE nickname LIKE CONCAT('%', #{nickname}, '%')
	</select>

	<select id="loginUser" resultMap="userResultMap">
		SELECT * FROM users WHERE email
		= #{email}
	</select>

	<insert id="insertUser"
		parameterType="com.warr.ferr.model.Users">
		INSERT INTO users (kakao_id, email, password, nickname,
		profile_image_url,
		role, real_name, account_status)
		VALUES (#{kakaoId},
		#{email}, #{password}, #{nickname}, #{profileImageUrl},
		#{role},
		#{realName}, #{accountStatus})
	</insert>

	<update id="updateUser"
		parameterType="com.warr.ferr.model.Users">
		UPDATE users
		SET kakao_id = #{kakaoId}
		WHERE email =
		#{email}
	</update>


	<select id="findUserIdByEmail" resultType="java.lang.Integer">
		SELECT user_id FROM
		users WHERE email = #{email}
	</select>

	<select id="findNicknameByEmail" resultType="java.lang.String">
		SELECT nickname FROM
		users WHERE email = #{email}
	</select>

	<!-- 채팅에서 임시로 사용중 사용자제외한 유저불러오기 -->
	<select id="findAllUser" resultMap="userResultMap">
		SELECT * FROM users
	</select>
	<!-- 채팅에서 임시로 사용중 사용자만 불러오기 -->
	<select id="findUserByUserId"
			resultMap="userResultMap">
		SELECT * FROM users
		WHERE
		user_id = #{userId};
	</select>

	<resultMap id="userPreferencesResultMap"
		type="com.warr.ferr.model.UserPreferences">
		<id property="preferenceId" column="preference_id" />
		<result property="userId" column="user_id" />
		<result property="preferredLocation"
			column="preferred_location" />
	</resultMap>

	<select id="getUserByEmail" resultType="int"
		parameterType="String">
		SELECT user_id FROM users WHERE email = #{email}
	</select>

	<select id="getUserPreferences"
		resultMap="userPreferencesResultMap">
		SELECT * FROM user_preferences WHERE user_id = #{userId}
	</select>

	<insert id="saveUserPreferences"
		parameterType="com.warr.ferr.model.UserPreferences">
		INSERT INTO user_preferences (user_id,
		preferred_location)
		VALUES (#{userId},
		#{preferredLocation})
		ON DUPLICATE
		KEY UPDATE
		preferred_location = VALUES(preferred_location);
	</insert>

	<update id="updateUserPreferences"
		parameterType="com.warr.ferr.model.UserPreferences">
		UPDATE user_preferences
		SET preferred_location =
		#{preferredLocation}
		WHERE user_id = #{userId}
	</update>
	
	<select id="findNicknameByUserId" resultType="String" parameterType="int">
        SELECT nickname
        FROM users
        WHERE user_id = #{userId}
    </select>
</mapper>